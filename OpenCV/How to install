Raspberry Pi OS 64‑bit(북서리/Bookworm) 기준

1) OpenCV 설치(전역, 권장)

  sudo apt update && sudo apt -y full-upgrade
  sudo apt -y install python3-opencv libgl1 gstreamer1.0-tools gstreamer1.0-libav \
                      gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
 

  python3 - << 'PY'
  import cv2; print("OpenCV:", cv2.__version__)
  PY

  
  결과 예:
  OpenCV version: 4.6.0

----------------------

Python 3.11 수동 설치

Python 3.11 빌드 설치 (라즈베리파이 64bit 기준)
1단계. 의존성 설치
  sudo apt update
  sudo apt install -y wget build-essential zlib1g-dev libncurses5-dev \
    libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev \
    libbz2-dev liblzma-dev uuid-dev libgdbm-compat-dev

2단계. 소스코드 다운로드
  cd /usr/src
  sudo wget https://www.python.org/ftp/python/3.11.6/Python-3.11.6.tgz
  sudo tar xvf Python-3.11.6.tgz
  cd Python-3.11.6

3단계. 빌드 및 설치
  sudo ./configure --enable-optimizations
  sudo make -j$(nproc)     # 병렬 빌드, 약 20~40분 소요
  sudo make altinstall     # 'python3'를 덮어쓰지 않음

4단계. 확인
python3.11 --version     # → Python 3.11.6
which python3.11         # → /usr/local/bin/python3.11

5. 기본 python3로 연결하고 싶을 경우
sudo update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.11 2
sudo update-alternatives --config python3

>> 항목 중 3.11 선택
----
이후 작업
pip 설치
sudo apt install python3-pip 또는 python3.11 -m ensurepip

OpenCV 확인
python3.11 -c "import cv2; print(cv2.__version__)"


-----------------------------------------------
sudo apt install python3-opencv로 설치된 OpenCV는 기본 시스템 Python (예: 3.9 or 3.10) 용으로 설치됩니다.

지금 수미님은 직접 빌드한 Python 3.11을 사용하고 계시기 때문에,
APT에서 설치된 OpenCV는 이 새 Python과 연결되어 있지 않습니다.

따라서 Python 3.11 전용으로 cv2를 다시 설치해줘야

  Python 3.11 전용 pip로 OpenCV 설치
  python3.11 -m pip install --upgrade pip setuptools wheel
  python3.11 -m pip install opencv-python

추가 패키지
python3.11 -m pip install opencv-contrib-python

설치 후 확인:
python3.11 -c "import cv2; print(cv2.__version__)"

>>>>>

GUI 기능(imshow)이 오류 나면:
sudo apt install libgl1 libgtk-3-dev

가상환경에서 설치 (더 권장되는 방식)
python3.11 -m venv ~/ai-env
source ~/ai-env/bin/activate
pip install --upgrade pip
pip install opencv-python


이후 사용 시:

source ~/ai-env/bin/activate
python
>>> import cv2
>>> print(cv2.__version__)

--------------------------------------

2. 웹캠 연결 및 인식 확인
  
  USB 포트에 웹캠을 꽂고 아래 명령어
  

  # 1. 장치 목록 확인
  ls /dev/video*
  
  # 2. 인식된 장치 정보 보기
  v4l2-ctl -d /dev/video0 --all
  
  # 3. 지원 포맷/해상도 확인
  v4l2-ctl -d /dev/video0 --list-formats-ext
  

  # 보통 /dev/video0가 웹캠
  # MJPG 지원 여부를 꼭 확인하세요 → OpenCV에서 성능 차이 큼

  권장 설정 코드 예시 (속도/호환 최적화)
  import cv2
  
  cap = cv2.VideoCapture(0)
  if not cap.isOpened():
      raise Exception("웹캠 열기 실패")
  
  # MJPG 포맷 지정 (성능 향상)
  cap.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))
  
  # 해상도 설정
  cap.set(cv2.CAP_PROP_FRAME_WIDTH,  640)
  cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)

---------------

3. OpenCV로 웹캠 화면 띄우기

  # webcam_test.py
  import cv2
  cap = cv2.VideoCapture(0)  # USB 웹캠
  if not cap.isOpened():
      raise SystemExit("웹캠을 열 수 없습니다. /dev/video* 와 dmesg 확인")
  
  # 선택: 해상도 지정
  cap.set(cv2.CAP_PROP_FRAME_WIDTH,  640)
  cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
  
  while True:
      ok, frame = cap.read()
      if not ok: break
      cv2.imshow("Webcam", frame)
      if cv2.waitKey(1) & 0xFF == ord('q'):
          break
  cap.release(); cv2.destroyAllWindows()
  
  
  실행:
   python3 webcam_test.py
------------------------

3. 웹캠 해상도 설정

  cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
  cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
  이렇게 하면 640x480 해상도로 강제 설정됩니다.
  대부분의 USB 웹캠은 VGA(640x480), HD(1280x720)까지 지원

  --------------------------------

4. AI 추론(권장): TFLite를 가상환경에 설치
TensorFlow 정식판보다 tflite‑runtime이 라즈베리파이에서 훨씬 가볍고 안정적

  # 가상환경 만들기
  sudo apt -y install python3-venv libopenblas-dev
  python3 -m venv ~/ai-env
  source ~/ai-env/bin/activate
  
  # 최신 pip + 런타임 설치
  pip install --upgrade pip
  pip install numpy tflite-runtime
  
  # 동작 확인
  python - << 'PY'
  import tflite_runtime.interpreter as t
  print("TFLite OK")
  PY

 -------------------

 5. 확인

 # 64비트 확인
  uname -m            # aarch64 여야 함
  
  # OpenCV 전역 확인
  python3 -c "import cv2; print(cv2.__version__)"
  
  # 웹캠 장치 확인
  ls /dev/video*
  
  # TFLite 가상환경 확인
  source ~/ai-env/bin/activate
  python -c "import tflite_runtime.interpreter as t; print('TFLite OK')"

  

