# Ctrl+Alt+T
cat > install_face_recognition_auto.sh << 'EOF'
# 커서 깜빡이면 아래 전체 붙여넣기

------------------------------------------------

#!/bin/bash
# Face Recognition 자동 설치 스크립트 (완전 자동)
# 라즈베리파이 5 전용 (4GB/8GB 모두 지원)

set -e  # 에러 발생시 중단

echo "=========================================="
echo "Face Recognition 자동 설치"
echo "라즈베리파이 5 전용"
echo "=========================================="

# 메모리 확인 후 안내 메시지 조정
TOTAL_MEM=$(free -m | awk '/^Mem:/ {print $2}')
if [ "$TOTAL_MEM" -lt 6000 ]; then
    echo "감지된 메모리: 4GB 모델"
    COMPILE_TIME="40-50분"
else
    echo "감지된 메모리: 8GB 모델"
    COMPILE_TIME="30-40분"
fi

echo ""
echo "⚠️  이 스크립트는 사용자 확인 없이 자동 진행됩니다"
echo "⚠️  스왑 메모리가 자동으로 2GB로 설정됩니다"
echo "⚠️  dlib 컴파일에 ${COMPILE_TIME} 소요됩니다"
echo ""
read -p "계속하시겠습니까? (y/n): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "설치 중단"
    exit 1
fi

# 색깔 정의
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# 1. 시스템 정보 확인
echo ""
echo "=========================================="
echo "1. 시스템 정보"
echo "=========================================="

echo -n "OS 버전: "
cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2

echo -n "Python 버전: "
python3 --version

echo -n "메모리: "
free -h | awk '/^Mem:/ {print $2}'

echo -n "CPU 온도: "
vcgencmd measure_temp

echo ""

# 2. CMake 자동 설치
echo "=========================================="
echo "2. CMake 확인 및 설치"
echo "=========================================="

if command -v cmake &> /dev/null; then
    CMAKE_VERSION=$(cmake --version | head -n1 | awk '{print $3}')
    echo -e "${GREEN}✅ CMake 설치됨: $CMAKE_VERSION${NC}"
else
    echo "CMake 자동 설치 중..."
    sudo apt update
    sudo apt install -y cmake
    CMAKE_VERSION=$(cmake --version | head -n1 | awk '{print $3}')
    echo -e "${GREEN}✅ CMake 설치 완료: $CMAKE_VERSION${NC}"
fi

echo ""

# 3. 의존성 자동 설치
echo "=========================================="
echo "3. 의존성 패키지 자동 설치"
echo "=========================================="

PACKAGES=(
    "build-essential"
    "libopenblas-dev"
    "liblapack-dev"
    "libx11-dev"
    "libgtk-3-dev"
    "python3-dev"
    "python3-pip"
)

echo "필요한 패키지 설치 중..."
sudo apt update
sudo apt install -y "${PACKAGES[@]}"
echo -e "${GREEN}✅ 의존성 설치 완료${NC}"

echo ""

# 4. 스왑 메모리 자동 설정 (4GB/8GB 공통)
echo "=========================================="
echo "4. 스왑 메모리 자동 설정"
echo "=========================================="

SWAP_TOTAL=$(free -m | awk '/^Swap:/ {print $2}')

echo "전체 메모리: ${TOTAL_MEM}MB"
echo "현재 스왑: ${SWAP_TOTAL}MB"

if [ "$SWAP_TOTAL" -lt 2000 ]; then
    echo -e "${YELLOW}⚠️  스왑 메모리 부족${NC}"
    echo "자동으로 2GB로 증설 중..."
    
    sudo dphys-swapfile swapoff 2>/dev/null || true
    
    if ! command -v dphys-swapfile &> /dev/null; then
        sudo apt install -y dphys-swapfile
    fi
    
    sudo sed -i 's/CONF_SWAPSIZE=.*/CONF_SWAPSIZE=2048/' /etc/dphys-swapfile
    sudo dphys-swapfile setup
    sudo dphys-swapfile swapon
    
    SWAP_TOTAL=$(free -m | awk '/^Swap:/ {print $2}')
    echo -e "${GREEN}✅ 스왑 메모리 설정 완료: ${SWAP_TOTAL}MB${NC}"
else
    echo -e "${GREEN}✅ 스왑 메모리 충분: ${SWAP_TOTAL}MB${NC}"
fi

echo ""

# 5. OpenCV 자동 설치
echo "=========================================="
echo "5. OpenCV 확인 및 설치"
echo "=========================================="

if python3 -c "import cv2" 2>/dev/null; then
    CV_VERSION=$(python3 -c "import cv2; print(cv2.__version__)")
    echo -e "${GREEN}✅ OpenCV 설치됨: $CV_VERSION${NC}"
else
    echo "OpenCV 자동 설치 중..."
    sudo apt install -y python3-opencv
    echo -e "${GREEN}✅ OpenCV 설치 완료${NC}"
fi

echo ""

# 6. dlib 자동 설치
echo "=========================================="
echo "6. dlib 자동 설치 (${COMPILE_TIME} 소요)"
echo "=========================================="

if python3 -c "import dlib" 2>/dev/null; then
    DLIB_VERSION=$(python3 -c "import dlib; print(dlib.__version__)")
    echo -e "${GREEN}✅ dlib 이미 설치됨: $DLIB_VERSION${NC}"
else
    echo "dlib 컴파일 시작..."
    echo "시작 시간: $(date)"
    echo ""
    echo "모니터링 방법:"
    echo "  새 터미널: Ctrl+Alt+T"
    echo "  명령어: htop 또는 top"
    echo "  온도: watch -n 2 vcgencmd measure_temp"
    echo ""
    
    START_TIME=$(date +%s)
    pip3 install dlib --break-system-packages
    END_TIME=$(date +%s)
    
    DURATION=$((END_TIME - START_TIME))
    MINUTES=$((DURATION / 60))
    SECONDS=$((DURATION % 60))
    
    echo ""
    echo -e "${GREEN}✅ dlib 설치 완료${NC}"
    echo "소요 시간: ${MINUTES}분 ${SECONDS}초"
fi

echo ""

# 7. face_recognition 자동 설치
echo "=========================================="
echo "7. face_recognition 자동 설치"
echo "=========================================="

if python3 -c "import face_recognition" 2>/dev/null; then
    echo -e "${GREEN}✅ face_recognition 이미 설치됨${NC}"
else
    echo "face_recognition 설치 중..."
    pip3 install face-recognition --break-system-packages
    echo -e "${GREEN}✅ face_recognition 설치 완료${NC}"
fi

echo ""

# 8. 설치 확인
echo "=========================================="
echo "8. 설치 확인 테스트"
echo "=========================================="

python3 << PYTHON_EOF
import sys

print("라이브러리 로드 테스트:")
print("-" * 40)

try:
    import cv2
    print(f"✅ OpenCV: {cv2.__version__}")
except ImportError as e:
    print(f"❌ OpenCV: {e}")
    sys.exit(1)

try:
    import numpy as np
    print(f"✅ NumPy: {np.__version__}")
except ImportError as e:
    print(f"❌ NumPy: {e}")
    sys.exit(1)

try:
    import dlib
    print(f"✅ dlib: {dlib.__version__}")
except ImportError as e:
    print(f"❌ dlib: {e}")
    sys.exit(1)

try:
    import face_recognition
    print(f"✅ face_recognition: 설치 완료")
except ImportError as e:
    print(f"❌ face_recognition: {e}")
    sys.exit(1)

print("-" * 40)
print("🎉 모든 라이브러리 정상 작동!")
PYTHON_EOF

echo ""
echo "=========================================="
echo "✅ 자동 설치 완료!"
echo "=========================================="
echo ""

EOF
-------------------------------------------

# 1. 스크립트 생성
# (위의 전체 코드 복사)

# 2. 실행 권한
chmod +x install_face_recognition_auto.sh

# 3. 실행
./install_face_recognition_auto.sh

# 4. 처음 한 번만 확인
계속하시겠습니까? (y/n): y

# 5. 이후 완전 자동 진행
# - 스왑 자동 설정
# - 패키지 자동 설치
# - dlib 자동 컴파일
# - 40-50분 대기만 하면 됨
