아래 이슈로 인해 최신 OS 대신 아래 64-bit (Bookworm, full) 버전으로 설치

발견된 문제
  기존 OS (예: Bullseye 32/64bit) 상태에서:
        Python 3.11, 최신 OpenCV, TensorFlow를 수동으로 설치하였으나 
        Python 업그레이드 후 pip 패키지와 시스템 패키지 충돌 발생
           (python3-opencv vs pip install opencv-python)
        cv2 모듈 import 시 오류
        numpy와 OpenCV 간 버전 불일치
        Tesseract, VSCODE, 한글 입력기까지 호환성 문제 동시 발생
   
  결론: OS와 개발도구가 서로 버전 충돌 → 더 이상 안정적으로 유지하기 어려움
>>>>>>>>>>>>>>
   -  최신 Python (3.11) 기본 제공
   - OpenCV, TensorFlow 등 최신 패키지와 버전 충돌 없음
   - ARM64 wheel 지원 증가로 빌드 실패율 급감
   - 시스템 전체가 최신 라이브러리 기준으로 재정렬되어 충돌 없음
    
▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼

https://downloads.raspberrypi.com/raspios_full_arm64/images/raspios_full_arm64-2023-10-10/
>> 2023-10-10-raspios-bookworm-arm64-full.img.xz  파일 다운로드
( https://downloads.raspberrypi.com/raspios_full_arm64/images/raspios_full_arm64-2023-10-10/2023-10-10-raspios-bookworm-arm64-full.img.xz  )


1단계. OS 설치
  Raspberry Pi Imager 다운로드: https://www.raspberrypi.com/software
  SD 카드: 64GB 이상 (U3, A2 등급 추천)

  Raspberry Pi Imager 실행
    OS 선택 custom 선택
    다운받아 놓은 2023-10-10-raspios-bookworm-arm64-full.img.xz 
    저장 장치 선택 → SD 카드

------------------------------------------

2단계. 업데이트 설정

  기본 업데이트시 오류가 날 수있음    
     # ① 충돌 가능성 있는 패키지 먼저 제거
    sudo apt remove --purge arandr system-config-printer xinput rasputin raspi-utils -y
    
  # ② 불필요한 의존성도 정리
    sudo apt autoremove -y
  
  # ③ 패키지 목록 최신화
    sudo apt update
  
  # ④ 시스템 패키지 업그레이드
    sudo apt upgrade -y 
    sudo reboot

    필요시 SSH 활성화:
      sudo raspi-config
      → Interface Options → SSH → Enable

-----------------------------------------

3단계. 한글 입력 설정 (Fcitx5)
  sudo apt install fcitx5 fcitx5-hangul fonts-unfonts-core -y

  환경변수 설정:
  sudo nano /etc/environment
    
  아래 3줄 추가:
    GTK_IM_MODULE=fcitx
    QT_IM_MODULE=fcitx
    XMODIFIERS=@im=fcitx
  
  → 저장 후:
  sudo reboot

  INPUT Method
    오른쪽 상단 입력기 아이콘 클릭 → Configure
    + 클릭 → Hangul 추가
-------------------------------------------

4단계. VSCode 설치 (공식 버전)

  sudo apt install software-properties-common apt-transport-https wget -y
  wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
  sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
  sudo sh -c 'echo "deb [arch=arm64] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
  sudo apt update
  sudo apt install code -y

------------------------------------

5단계. OpenCV 설치
  sudo apt install python3-opencv python3-pip -y
  pip install numpy
  
  확인:
    import cv2
    print(cv2.__version__)

-------------------------------------------------

6단계. 웹캠 연결 및 테스트

  웹캠을 USB에 연결한 후:

    sudo apt install fswebcam -y
    fswebcam test.jpg
      → test.jpg 이미지 생성되면 정상 작동

--------------------------------------------------

7단계. TensorFlow 설치 (가상환경 추천)

  가상환경 생성 (선택사항이지만 효율)
    sudo apt install python3-venv -y
    python3 -m venv tfenv
    source tfenv/bin/activate

  설치 (공식 또는 ARM64 버전 중 선택)
    선택1) 일반 TensorFlow (공식 arm64)
      pip install --upgrade pip
      pip install tensorflow
      
    선택2) 경량 버전 (성능 최적화)
      pip install tensorflow-aarch64
    
  
    확인:
      import tensorflow as tf
      print(tf.__version__)

----------------------------------------
